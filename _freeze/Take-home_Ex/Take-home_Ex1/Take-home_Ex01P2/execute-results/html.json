{
  "hash": "dc87121bd483dd85af6389cfdfa7dcaf",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take-home Exercise 1 Phase 2\"\nauthor: \"Yi Fang\"\ndate: \"May 9, 2025\"\ndate-modified: \"last-modified\"\nformat: html\neditor: visual\nfreeze: true\nwarning: false\n---\n\n\n\n# 1 Overview\n\n## 1.1 Objective\n\nThis exercise aims to enhance a visualisation originally created by a fellow course-mate as a graphic editor of a media company that publishes daily content on digital platforms. The critique will be made with reference to the following principles extracted from Ben Jones' article (\"Data Visualization: Clarity or Aesthetics?\").\n\n![](images/clipboard-891094182.png)\n\n# 2 Getting started\n\n## 2.1 Load packages\n\nThe following R packages will be loaded using the `pacman::p_load()` function.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(ggrepel, patchwork, \n               tidyverse, scales,\n               ggridges) \n```\n:::\n\n\n\n## 2.2 Import data\n\nThis exercise will be using the same dataset as Phase 1 of Take-Home Exercise 1. Thus, proceed to import data with the following code.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata <- read_csv(\"data/respopagesex2024.csv\")\n```\n:::\n\n\n\n## 2.3 Data preprocessing\n\nSince the goal of this exercise is to provide critiques on the original visualisation, the data pre-processing will follow the process of the original visualisation.\n\n# 3 Visualisation selected\n\n## 3.1 Original Work\n\nThe [chosen submission](https://isss608vaarajesh01.netlify.app/takehomeexercises/take_homeexercise1/take_homeexercise1) had the following visualisation for Top 10 Planning Areas by Total Population.\n\n::: panel-tabset\n## Plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Take-home_Ex01P2_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n\n## Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntop_pa <- data %>%\n  group_by(PA) %>%\n  summarise(Total_Pop = sum(Pop)) %>%\n  arrange(desc(Total_Pop)) %>%\n  slice_head(n = 10)\n\nggplot(top_pa, aes(x = reorder(PA, Total_Pop), y = Total_Pop)) +\n  geom_col(fill = \"steelblue\") +\n  coord_flip() +\n  labs(title = \"Top 10 Most Populous Planning Areas (2024)\",\n       x = \"Planning Area\", y = \"Total Population\") +\n  theme_minimal()\n```\n:::\n\n\n:::\n\n## 3.2 Critique\n\n[**Clarity**]{.underline}\n\nWhy it is clear:\n\n-   Clear and purposeful layout: Bar chart is a good choice for communicating ranked categorical data. It is simple, direct and allows readers to immediately grasp the key message of the data visualisation.\n\n-   Logical ordering: The planning areas are arranged in descending order based on population size. This allows readers to quickly identify which areas are the most densely populated at the first glance and easily understand relative magnitude.\n\nWhy it can be confusing:\n\n-   Scientific notation undermines readability: Displaying population values in scientific notations will require readers to engage in additional cognitive effort and may be difficult for non-technical readers. This introduces friction into the reading experience. On fast-scrolling digital platforms, accessible by general public of all ages and abilities, reducing interpretation barriers is critical.\n\n-   Title and labels lack specificity: The title does not specify the scope of population (whether non-residents are included). Similarly, the x-axis label \"Total Population\" which is vague in a demographic context where definitions matter. To enhance the clarity, \"Total Population\" can be defined as \"Resident Population\" and source can be added to the data visualisation for readers to have further reference on the definition of \"Resident Population\" and the year of reference.\n\n[**Aesthetic**]{.underline}\n\nWhy it is beautiful:\n\n-   Simple and clean theme with faint gridlines: There are no unnecessary details, thus successfully avoiding distractions that do not contribute to understanding.\n\n-   Orientation of bar chart: Horizontal orientation is able to accommodate long planning area names without truncation or overlapping, which enhances readability.\n\nWhy it can be ugly:\n\n-   Dull visualisation: While using a single blue shade avoids unnecessary noise, it fails to enhance visual interest or guide the reader's attention. As Ben Jones mentioned, aesthetics and clarity can come hand-in-hand where aesthetics can aid clarity when used meaningfully. Applying a colour gradient, dark to light based on population size, or selectively highlighting the most populous area, would create visual contrast that draws attention and support the ranking narrative, without adding clutter.\n\n## 3.3 Remake\n\nBased on the critique in section 3.2, a revised version of the original visualisation has been created. It retains the strengths of the original visualisation while refining the areas identified for improvement.\n\n::: panel-tabset\n## Plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Take-home_Ex01P2_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\n## Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Summarise top 10 planning areas by resident population\ntop_pa <- data %>%\n  group_by(PA) %>%\n  summarise(Total_Pop = sum(Pop)) %>%\n  arrange(desc(Total_Pop)) %>%\n  slice_head(n = 10)\n\n# Prepare data for plotting\ntop_pa <- top_pa %>%\n  arrange(desc(Total_Pop)) %>%\n  mutate(PA = factor(PA, levels = rev(PA)),\n         Fill = Total_Pop)\n\n# Create the plot\nggplot(top_pa, aes(x = PA, y = Total_Pop, fill = Fill)) +\n  geom_col() +\n  coord_flip() +\n  scale_fill_gradient(low = \"#bdd7e7\", high = \"#08519c\", guide = \"none\") +\n  scale_y_continuous(labels = comma) +\n  labs(\n    title = \"Top 10 Planning Areas by Resident Population\",\n    x = \"Planning Area\",\n    y = \"Number of Residents\",\n    caption = \"Source: Department of Statistics Singapore (2024)\"\n  ) +\n  theme_minimal(base_size = 12) +\n  theme(\n    plot.title = element_text(face = \"bold\"),\n    axis.title.x = element_text(margin = margin(t = 10)),\n    axis.title.y = element_text(margin = margin(r = 10)),\n    plot.caption = element_text(hjust = 1, size = 8, color = \"gray30\")\n  )\n```\n:::\n\n\n:::\n\n# 4 References\n\n-   [Original work by course-mate](https://isss608vaarajesh01.netlify.app/takehomeexercises/take_homeexercise1/take_homeexercise1)\n\n-   [Data Visualisation: Clarity or Aesthetics? by Ben Jones](https://dataremixed.com/2012/05/data-visualization-clarity-or-aesthetics/)\n",
    "supporting": [
      "Take-home_Ex01P2_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}